name: CI

on:
  push:
    branches:
      - main
  pull_request: ~
  workflow_dispatch: ~

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.run_id }}
  cancel-in-progress: true

env:
  TMDB_API_KEY: ${{ secrets.TMDB_API_KEY }}
  TMDB_API_TOKEN: ${{ secrets.TMDB_API_TOKEN }}
  GH_TOKEN: ${{ secrets.GH_TOKEN }}

jobs:
  tests:
    name: Tests
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      -
        name: Build Docker images
        uses: docker/bake-action@v4
        with:
          pull: true
          load: true
          files: |
            compose.yaml
            compose.override.yaml
          set: |
            *.cache-from=type=gha,scope=${{github.ref}}
            *.cache-from=type=gha,scope=refs/heads/main
            *.cache-to=type=gha,scope=${{github.ref}},mode=max
      -
        name: Start services
        run: docker compose up --wait --no-build
      -
        name: Install dependencies
        run: docker compose exec -T php composer install | docker compose exec -T node npm install
      -
        name: Build assets
        run: docker compose exec -T node npm run build
      -
        name: Generate DTOs
        run: docker compose exec -T php bin/console app:dto:generate dto/tmdb-openapi.json src/Dto
      -  
        name: Check HTTP reachability
        run: curl -v --fail-with-body http://localhost
      -
        name: Check HTTPS reachability
        if: false # Remove this line when the homepage will be configured, or change the path to check
        run: curl -vk --fail-with-body https://localhost
      -
        name: Create test database
        run: docker compose exec -T php bin/console -e test doctrine:database:create
      -
        name: Run migrations
        run: docker compose exec -T php bin/console -e test doctrine:migrations:migrate --no-interaction
      -
        name: Load fixtures
        run: docker compose exec -T php bin/console -e test doctrine:fixtures:load --no-interaction
      -
        name: Run PHPUnit
        run: docker compose exec -T php bin/phpunit tests --coverage-clover coverage.xml .
      -  
        name: Run PHP-CS-Fixer
        run: docker compose exec -T php vendor/bin/php-cs-fixer check
      -        
        name: Run PHPStan
        run: docker compose exec -T php vendor/bin/phpstan analyse --memory-limit=512M
      -        
        name: Run PHPMD
        run: docker compose exec -T php vendor/bin/phpmd src ansi phpmd.xml
      -
        name: Doctrine Schema Validator
        if: false
        run: docker compose exec -T php bin/console -e test doctrine:schema:validate
      -  
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        env:
          CODECOV_TOKEN: ${{ secrets.CODECOV_ORG_TOKEN }}
  lint:
    name: Docker Lint
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v4
      -
        name: Lint Dockerfile
        uses: hadolint/hadolint-action@v3.1.0
