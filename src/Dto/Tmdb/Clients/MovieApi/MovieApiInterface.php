<?php

namespace App\Dto\Tmdb\Clients\MovieApi;

use App\Dto\Tmdb\Responses\Movie\MovieDetails;
use App\Dto\Tmdb\Responses\Movie\MovieImages;
use App\Dto\Tmdb\Responses\Movie\MovieAccountStates;
use App\Dto\Tmdb\Responses\Movie\MovieAlternativeTitles;
use App\Dto\Tmdb\Responses\Movie\MovieChanges;
use App\Dto\Tmdb\Responses\Movie\MovieCredits;
use App\Dto\Tmdb\Responses\Movie\MovieExternalIds;
use App\Dto\Tmdb\Responses\Movie\MovieKeywords;
use App\Dto\Tmdb\Responses\Movie\MovieLists;
use App\Dto\Tmdb\Responses\Movie\MovieRecommendations;
use App\Dto\Tmdb\Responses\Movie\MovieReleaseDates;
use App\Dto\Tmdb\Responses\Movie\MovieReviews;
use App\Dto\Tmdb\Responses\Movie\MovieSimilar;
use App\Dto\Tmdb\Responses\Movie\MovieTranslations;
use App\Dto\Tmdb\Responses\Movie\MovieVideos;
use App\Dto\Tmdb\Responses\Movie\MovieWatchProviders;
use App\Dto\Tmdb\Responses\Movie\MoviePopularList;
use App\Dto\Tmdb\Responses\Movie\MovieTopRatedList;
use App\Dto\Tmdb\Responses\Movie\MovieUpcomingList;
use App\Dto\Tmdb\Responses\Movie\MovieNowPlayingList;
use App\Dto\Tmdb\Responses\Movie\MovieLatestId;
use App\Dto\Tmdb\Responses\Movie\ChangesMovieList;

/**
 * This class was auto generated by the TMDB DTO Generator.
 * Do not edit this file manually!
 */
interface MovieApiInterface
{
    /**
     * /3/movie/{movie_id} - Get the top level details of a movie by ID.
     * @param ?string $appendToResponse comma separated list of endpoints within this namespace, 20 items max
     */
    public function movieDetails(int $movieId, ?string $language = 'en-US', ?string $appendToResponse = null): MovieDetails;

    /**
     * /3/movie/{movie_id}/images - Get the images that belong to a movie.
     * @param ?string $includeImageLanguage specify a comma separated list of ISO-639-1 values to query, for example: `en,null`
     */
    public function movieImages(int $movieId, ?string $language = null, ?string $includeImageLanguage = null): MovieImages;

    /**
     * /3/movie/{movie_id}/account_states - Get the rating, watchlist and favourite status of an account.
     */
    public function movieAccountStates(int $movieId, ?string $guestSessionId = null, ?string $sessionId = null): MovieAccountStates;

    /**
     * /3/movie/{movie_id}/alternative_titles - Get the alternative titles for a movie.
     * @param ?string $country specify a ISO-3166-1 value to filter the results
     */
    public function movieAlternativeTitles(int $movieId, ?string $country = null): MovieAlternativeTitles;

    /**
     * /3/movie/{movie_id}/changes - Get the recent changes for a movie.
     */
    public function movieChanges(int $movieId, ?string $startDate = null, ?int $page = 1, ?string $endDate = null): MovieChanges;

    /**
     * /3/movie/{movie_id}/credits
     */
    public function movieCredits(int $movieId, ?string $language = 'en-US'): MovieCredits;

    /**
     * /3/movie/{movie_id}/external_ids
     */
    public function movieExternalIds(int $movieId): MovieExternalIds;

    /**
     * /3/movie/{movie_id}/keywords
     */
    public function movieKeywords(string $movieId): MovieKeywords;

    /**
     * /3/movie/{movie_id}/lists - Get the lists that a movie has been added to.
     */
    public function movieLists(int $movieId, ?int $page = 1, ?string $language = 'en-US'): MovieLists;

    /**
     * /3/movie/{movie_id}/recommendations
     */
    public function movieRecommendations(int $movieId, ?int $page = 1, ?string $language = 'en-US'): MovieRecommendations;

    /**
     * /3/movie/{movie_id}/release_dates - Get the release dates and certifications for a movie.
     */
    public function movieReleaseDates(int $movieId): MovieReleaseDates;

    /**
     * /3/movie/{movie_id}/reviews - Get the user reviews for a movie.
     */
    public function movieReviews(int $movieId, ?int $page = 1, ?string $language = 'en-US'): MovieReviews;

    /**
     * /3/movie/{movie_id}/similar - Get the similar movies based on genres and keywords.
     */
    public function movieSimilar(int $movieId, ?int $page = 1, ?string $language = 'en-US'): MovieSimilar;

    /**
     * /3/movie/{movie_id}/translations - Get the translations for a movie.
     */
    public function movieTranslations(int $movieId): MovieTranslations;

    /**
     * /3/movie/{movie_id}/videos
     */
    public function movieVideos(int $movieId, ?string $language = 'en-US'): MovieVideos;

    /**
     * /3/movie/{movie_id}/watch/providers - Get the list of streaming providers we have for a movie.
     */
    public function movieWatchProviders(int $movieId): MovieWatchProviders;

    /**
     * /3/movie/popular - Get a list of movies ordered by popularity.
     * @param ?string $region ISO-3166-1 code
     */
    public function moviePopularList(?int $page = 1, ?string $region = null, ?string $language = 'en-US'): MoviePopularList;

    /**
     * /3/movie/top_rated - Get a list of movies ordered by rating.
     * @param ?string $region ISO-3166-1 code
     */
    public function movieTopRatedList(?int $page = 1, ?string $region = null, ?string $language = 'en-US'): MovieTopRatedList;

    /**
     * /3/movie/upcoming - Get a list of movies that are being released soon.
     * @param ?string $region ISO-3166-1 code
     */
    public function movieUpcomingList(?int $page = 1, ?string $region = null, ?string $language = 'en-US'): MovieUpcomingList;

    /**
     * /3/movie/now_playing - Get a list of movies that are currently in theatres.
     * @param ?string $region ISO-3166-1 code
     */
    public function movieNowPlayingList(?int $page = 1, ?string $region = null, ?string $language = 'en-US'): MovieNowPlayingList;

    /**
     * /3/movie/latest - Get the newest movie ID.
     */
    public function movieLatestId(): MovieLatestId;

    /**
     * /3/movie/changes - Get a list of all of the movie ids that have been changed in the past 24 hours.
     */
    public function changesMovieList(?int $page = 1, ?string $startDate = null, ?string $endDate = null): ChangesMovieList;
}