<?php

namespace App\Dto\Tmdb\Clients\DiscoverApi;

use App\Dto\Tmdb\Responses\Discover\DiscoverMovie;
use App\Dto\Tmdb\Responses\Discover\DiscoverTv;

/**
 * This class was auto generated by the TMDB DTO Generator.
 * Do not edit this file manually!
 */
interface DiscoverApiInterface
{
    /**
     * /3/discover/movie - Find movies using over 30 filters and sort options.
     * @param ?int $withReleaseType possible values are: [1, 2, 3, 4, 5, 6] can be a comma (`AND`) or pipe (`OR`) separated query, can be used in conjunction with `region`
     * @param ?string $withCrew can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withKeywords can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withCast can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $certificationCountry use in conjunction with the `certification`, `certification.gte` and `certification.lte` filters
     * @param ?string $certificationLte use in conjunction with `region`
     * @param ?string $withWatchProviders use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $certificationGte use in conjunction with `region`
     * @param ?string $withCompanies can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withGenres can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withPeople can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withWatchMonetizationTypes possible values are: [flatrate, free, ads, rent, buy] use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $watchRegion use in conjunction with `with_watch_monetization_types ` or `with_watch_providers `
     * @param ?string $certification use in conjunction with `region`
     */
    public function discoverMovie(?int $withRuntimeLte = null, ?string $withOriginalLanguage = null, ?int $withReleaseType = null, ?string $withCrew = null, ?string $withKeywords = null, ?string $withoutWatchProviders = null, ?string $withCast = null, ?int $page = 1, ?int $primaryReleaseYear = null, ?bool $includeVideo = false, ?string $language = 'en-US', ?bool $includeAdult = false, ?string $certificationCountry = null, ?string $certificationLte = null, ?string $withWatchProviders = null, ?string $primaryReleaseDateGte = null, ?string $withoutGenres = null, ?string $primaryReleaseDateLte = null, ?string $certificationGte = null, ?string $region = null, ?string $withCompanies = null, ?string $releaseDateGte = null, ?string $withGenres = null, ?string $releaseDateLte = null, ?string $withOriginCountry = null, ?string $sortBy = 'popularity.desc', ?string $withPeople = null, ?float $voteAverageGte = null, ?int $withRuntimeGte = null, ?float $voteAverageLte = null, ?string $withWatchMonetizationTypes = null, ?float $voteCountGte = null, ?string $withoutCompanies = null, ?float $voteCountLte = null, ?string $withoutKeywords = null, ?string $watchRegion = null, ?int $year = null, ?string $certification = null): DiscoverMovie;

    /**
     * /3/discover/tv - Find TV shows using over 30 filters and sort options.
     * @param ?string $withWatchProviders use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withStatus possible values are: [0, 1, 2, 3, 4, 5], can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withKeywords can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withCompanies can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withGenres can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $withWatchMonetizationTypes possible values are: [flatrate, free, ads, rent, buy] use in conjunction with `watch_region`, can be a comma (`AND`) or pipe (`OR`) separated query
     * @param ?string $watchRegion use in conjunction with `with_watch_monetization_types ` or `with_watch_providers `
     * @param ?string $withType possible values are: [0, 1, 2, 3, 4, 5, 6], can be a comma (`AND`) or pipe (`OR`) separated query
     */
    public function discoverTv(?string $withWatchProviders = null, ?string $withoutGenres = null, ?int $withRuntimeGte = null, ?string $withStatus = null, ?string $withKeywords = null, ?string $withOriginCountry = null, ?string $language = 'en-US', ?string $withCompanies = null, ?bool $includeAdult = false, ?bool $includeNullFirstAirDates = false, ?string $firstAirDateLte = null, ?string $firstAirDateGte = null, ?int $firstAirDateYear = null, ?string $withoutWatchProviders = null, ?int $page = 1, ?string $airDateLte = null, ?bool $screenedTheatrically = null, ?string $withGenres = null, ?string $sortBy = 'popularity.desc', ?int $withNetworks = null, ?string $timezone = null, ?string $withOriginalLanguage = null, ?float $voteAverageGte = null, ?int $withRuntimeLte = null, ?float $voteAverageLte = null, ?string $withWatchMonetizationTypes = null, ?float $voteCountGte = null, ?string $withoutCompanies = null, ?float $voteCountLte = null, ?string $withoutKeywords = null, ?string $watchRegion = null, ?string $withType = null, ?string $airDateGte = null): DiscoverTv;
}