<?php

namespace App\Dto\Tmdb\Clients\SearchApi;

use App\Dto\Tmdb\Responses\Search\SearchMovie;
use App\Dto\Tmdb\Responses\Search\SearchTv;
use App\Dto\Tmdb\Responses\Search\SearchMulti;
use App\Dto\Tmdb\Responses\Search\SearchPerson;
use App\Dto\Tmdb\Responses\Search\SearchCompany;
use App\Dto\Tmdb\Responses\Search\SearchCollection;
use App\Dto\Tmdb\Responses\Search\SearchKeyword;

/**
 * This class was auto generated by the TMDB DTO Generator.
 * Do not edit this file manually!
 */
interface SearchApiInterface
{
    /**
     * /3/search/movie - Search for movies by their original, translated and alternative titles.
     */
    public function searchMovie(string $query, ?string $year = null, ?string $region = null, ?int $page = 1, ?string $primaryReleaseYear = null, ?string $language = 'en-US', ?bool $includeAdult = false): SearchMovie;

    /**
     * /3/search/tv - Search for TV shows by their original, translated and also known as names.
     * @param ?int $year Search the first air date and all episode air dates. Valid values are: 1000..9999
     * @param ?int $firstAirDateYear Search only the first air date. Valid values are: 1000..9999
     */
    public function searchTv(string $query, ?int $year = null, ?int $page = 1, ?string $language = 'en-US', ?bool $includeAdult = false, ?int $firstAirDateYear = null): SearchTv;

    /**
     * /3/search/multi - Use multi search when you want to search for movies, TV shows and people in a single request.
     */
    public function searchMulti(string $query, ?int $page = 1, ?string $language = 'en-US', ?bool $includeAdult = false): SearchMulti;

    /**
     * /3/search/person - Search for people by their name and also known as names.
     */
    public function searchPerson(string $query, ?int $page = 1, ?string $language = 'en-US', ?bool $includeAdult = false): SearchPerson;

    /**
     * /3/search/company - Search for companies by their original and alternative names.
     */
    public function searchCompany(string $query, ?int $page = 1): SearchCompany;

    /**
     * /3/search/collection - Search for collections by their original, translated and alternative names.
     */
    public function searchCollection(string $query, ?string $region = null, ?int $page = 1, ?string $language = 'en-US', ?bool $includeAdult = false): SearchCollection;

    /**
     * /3/search/keyword - Search for keywords by their name.
     */
    public function searchKeyword(string $query, ?int $page = 1): SearchKeyword;
}