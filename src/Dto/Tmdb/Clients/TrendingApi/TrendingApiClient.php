<?php

namespace App\Dto\Tmdb\Clients\TrendingApi;

use Symfony\Contracts\HttpClient\HttpClientInterface;
use Symfony\Component\Serializer\Normalizer\DenormalizerInterface;
use Symfony\Contracts\Cache\CacheInterface;
use App\Dto\Tmdb\Responses\Trending\TrendingAll;
use App\Dto\Tmdb\Responses\Trending\TrendingMovies;
use App\Dto\Tmdb\Responses\Trending\TrendingTv;
use App\Dto\Tmdb\Responses\Trending\TrendingPeople;

/**
 * This class was auto generated by the TMDB DTO Generator.
 * Do not edit this file manually!
 */
readonly class TrendingApiClient implements TrendingApiInterface
{
    public function __construct(
        private HttpClientInterface $tmdbHttpClient,
        private DenormalizerInterface $denormalizer,
        private CacheInterface $redis,
    )
    {
    }

    /**
     * /3/trending/all/{time_window} - Get the trending movies, TV shows and people.
     * @param ?string $language `ISO-639-1`-`ISO-3166-1` code
     */
    public function trendingAll(string $timeWindow, ?string $language = 'en-US'): TrendingAll
    {
        $url = strtr('/3/trending/all/{time_window}', [
            '{time_window}' => $timeWindow,
        ]);
        $query = [
            'language' => $language,
        ];

        $cacheKey = md5($url.'?'.http_build_query($query));
        return $this->redis->get($cacheKey, function ($item) use ($url, $query) {
            $item->expiresAfter(10800);
            $response = $this->tmdbHttpClient->request('GET', $url, ['query' => $query]);
            return $this->denormalizer->denormalize($response->toArray(), TrendingAll::class);
        });
    }

    /**
     * /3/trending/movie/{time_window} - Get the trending movies on TMDB.
     * @param ?string $language `ISO-639-1`-`ISO-3166-1` code
     */
    public function trendingMovies(string $timeWindow, ?string $language = 'en-US'): TrendingMovies
    {
        $url = strtr('/3/trending/movie/{time_window}', [
            '{time_window}' => $timeWindow,
        ]);
        $query = [
            'language' => $language,
        ];

        $cacheKey = md5($url.'?'.http_build_query($query));
        return $this->redis->get($cacheKey, function ($item) use ($url, $query) {
            $item->expiresAfter(10800);
            $response = $this->tmdbHttpClient->request('GET', $url, ['query' => $query]);
            return $this->denormalizer->denormalize($response->toArray(), TrendingMovies::class);
        });
    }

    /**
     * /3/trending/tv/{time_window} - Get the trending TV shows on TMDB.
     * @param ?string $language `ISO-639-1`-`ISO-3166-1` code
     */
    public function trendingTv(string $timeWindow, ?string $language = 'en-US'): TrendingTv
    {
        $url = strtr('/3/trending/tv/{time_window}', [
            '{time_window}' => $timeWindow,
        ]);
        $query = [
            'language' => $language,
        ];

        $cacheKey = md5($url.'?'.http_build_query($query));
        return $this->redis->get($cacheKey, function ($item) use ($url, $query) {
            $item->expiresAfter(10800);
            $response = $this->tmdbHttpClient->request('GET', $url, ['query' => $query]);
            return $this->denormalizer->denormalize($response->toArray(), TrendingTv::class);
        });
    }

    /**
     * /3/trending/person/{time_window} - Get the trending people on TMDB.
     * @param ?string $language `ISO-639-1`-`ISO-3166-1` code
     */
    public function trendingPeople(string $timeWindow, ?string $language = 'en-US'): TrendingPeople
    {
        $url = strtr('/3/trending/person/{time_window}', [
            '{time_window}' => $timeWindow,
        ]);
        $query = [
            'language' => $language,
        ];

        $cacheKey = md5($url.'?'.http_build_query($query));
        return $this->redis->get($cacheKey, function ($item) use ($url, $query) {
            $item->expiresAfter(10800);
            $response = $this->tmdbHttpClient->request('GET', $url, ['query' => $query]);
            return $this->denormalizer->denormalize($response->toArray(), TrendingPeople::class);
        });
    }
}